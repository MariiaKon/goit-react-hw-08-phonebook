{"version":3,"file":"static/js/737.2c661eda.chunk.js","mappings":"oLAEO,SAASA,EAAT,GAMH,IAAD,IALDC,KAAAA,OAKC,MALM,SAKN,MAJDC,QAAAA,OAIC,MAJS,GAIT,MAHDC,UAAAA,OAGC,MAHW,GAGX,EAFDC,EAEC,EAFDA,QAEC,IADDC,SAAAA,OACC,SACD,OACE,mBACEJ,KAAMA,EACNE,UAAWA,EACXC,QAASA,EACTC,SAAUA,EAJZ,SAMGH,M,6JCdMI,EAAOC,EAAAA,GAAAA,KAAH,8OAYJC,EAAQD,EAAAA,GAAAA,MAAH,iaAqBLE,EAAQF,EAAAA,GAAAA,MAAH,+gBA+BLG,EAAaH,EAAAA,GAAAA,KAAH,2R,sFC9DhB,SAASI,EAAT,GASJ,EARDC,WAQE,IAAD,IAPDC,WAAAA,OAOC,MAPY,GAOZ,MANDC,SAAAA,OAMC,MANU,SAAUC,EAAGC,EAAaC,GACnCF,EAAEG,iBACFF,EAAY,IACZC,EAAeF,IAGhB,EADDI,EACC,EADDA,SAEA,OACE,UAAC,KAAD,CAAML,SAAUA,EAAhB,UACGK,GACD,SAAC,IAAD,CAAQlB,KAAK,SAASC,QAASW,EAAYV,UAAU,a,yNCJ5C,SAASiB,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,MAAdD,UACAE,GAASC,EAAAA,EAAAA,IAAuBH,GAAhCE,KACFE,EAAa,WACjBN,EAAS,aACTF,GAASS,EAAAA,EAAAA,IAAe,MAE1B,GAAsBC,EAAAA,EAAAA,KAAfC,GAAP,eAEMC,EAAkB,mCAAG,WAAMC,GAAN,0FAEjBF,EAAYE,GAFK,sDAIvBC,QAAQC,IAAR,MAJuB,wDAAH,sDAQxB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,WACGT,IACC,SAAC,IAAD,CACEd,WAAW,eACXC,SAAU,SAAAC,GACRA,EAAEG,iBACFe,GAAmB,kBACdN,GADa,IAEhBU,KAAMtB,EAAEuB,OAAOD,KAAKE,MACpBC,OAAQzB,EAAEuB,OAAOE,OAAOD,SAE1BV,KAEFV,UACE,iCACE,UAAC,KAAD,YACE,SAAC,KAAD,CACElB,KAAK,OACLoC,KAAK,OACLI,QAAQ,2HACRC,MAAM,oIACNC,UAAQ,EACRC,aAAcjB,EAAKU,KACnBQ,aAAa,SAEf,4CAEF,UAAC,KAAD,YACE,SAAC,IAAD,CAAWC,KAAK,eAAhB,UACE,SAAC,KAAD,CACE7C,KAAK,MACLoC,KAAK,SACLK,MAAM,8BACNC,UAAQ,EACRC,aAAcjB,EAAKa,OACnBK,aAAa,WAGjB,mDAOV,SAAC,IAAD,CACE5C,KAAK,SACLE,UAAU,MACVC,QAASyB,EACT3B,QAAS","sources":["components/Button/Button.jsx","components/Forms/Form.styled.jsx","components/Forms/FormElement.jsx","views/EditContactModal/EditContactView.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport function Button({\n  type = 'button',\n  content = '',\n  className = '',\n  onClick,\n  disabled = false,\n}) {\n  return (\n    <button\n      type={type}\n      className={className}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {content}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid #fadccd;\n  background: #9b7369;\n  padding: 20px 10px 10px 10px;\n  margin: 20px auto;\n  width: 90%;\n  max-width: 600px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n  margin-bottom: 20px;\n  background: inherit;\n\n  & span {\n    position: absolute;\n    display: inline-block;\n    font-size: 14px;\n    line-height: 14px;\n    text-transform: uppercase;\n    top: calc(50% - 14px / 2);\n    left: 10px;\n    color: #fadccd7f;\n    transition: 250ms ease-in-out;\n  }\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #fadccd7f;\n  border-radius: 5px;\n  height: 36px;\n  padding: 14px 10px 6px 10px;\n  font-size: 16px;\n  width: 100%;\n  background: inherit;\n  color: #fadccd;\n  font-weight: 600;\n\n  &:hover {\n    outline: 1px solid #fadccd7f;\n  }\n\n  &:focus {\n    outline: 1px solid #fadccd;\n  }\n\n  &:focus ~ span,\n  &:valid ~ span {\n    top: -8px;\n    left: 14px;\n    font-size: 9px;\n    font-weight: 600;\n    padding: 0 4px;\n    color: #fadccd;\n    background: inherit;\n  }\n`;\n\nexport const FilterForm = styled.form`\n  background: inherit;\n  margin: 10px auto;\n  width: 90%;\n\n  & input {\n    padding: 10px;\n  }\n\n  & input::placeholder {\n    font-size: 14px;\n    line-height: 14px;\n    color: #fadccd7f;\n    font-weight: 400;\n    text-transform: uppercase;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Form } from './Form.styled';\nimport { Button } from 'components/Button/Button';\n\nexport function FormElement({\n  initValues = {},\n  btnContent = '',\n  onSubmit = function (e, formHandler, successHandler) {\n    e.preventDefault();\n    formHandler({});\n    successHandler(e);\n  },\n  children,\n}) {\n  return (\n    <Form onSubmit={onSubmit}>\n      {children}\n      <Button type=\"submit\" content={btnContent} className=\"btn\" />\n    </Form>\n  );\n}\n\nFormElement.propTypes = {\n  initValues: PropTypes.object,\n  btnContent: PropTypes.string,\n  onSubmit: PropTypes.func,\n  children: PropTypes.element,\n};\n","import { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport InputMask from 'react-input-mask';\nimport { Container, Overlay } from 'views/commonCss.styled';\nimport { Label, Input } from 'components/Forms/Form.styled';\nimport { FormElement } from 'components/Forms/FormElement';\nimport { Button } from 'components/Button/Button';\nimport {\n  useGetContactByIdQuery,\n  useEditContactMutation,\n  filterContacts,\n} from 'redux/contacts/contactReducer';\n\nexport default function Modal() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { contactId } = useParams();\n  const { data } = useGetContactByIdQuery(contactId);\n  const closeModal = () => {\n    navigate('/contacts');\n    dispatch(filterContacts(''));\n  };\n  const [editContact] = useEditContactMutation();\n\n  const editContactHandler = async contact => {\n    try {\n      await editContact(contact);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Overlay>\n      <Container>\n        {data && (\n          <FormElement\n            btnContent=\"Edit contact\"\n            onSubmit={e => {\n              e.preventDefault();\n              editContactHandler({\n                ...data,\n                name: e.target.name.value,\n                number: e.target.number.value,\n              });\n              closeModal();\n            }}\n            children={\n              <>\n                <Label>\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' - .][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dot, dash and spaces. For example Anne-Mary Mercer, Mr. Charles, Castelmore d'Artagnan\"\n                    required\n                    defaultValue={data.name}\n                    autoComplete=\"off\"\n                  />\n                  <span>Edit name</span>\n                </Label>\n                <Label>\n                  <InputMask mask=\"999-999-9999\">\n                    <Input\n                      type=\"tel\"\n                      name=\"number\"\n                      title=\"Phone number must be digits\"\n                      required\n                      defaultValue={data.number}\n                      autoComplete=\"off\"\n                    />\n                  </InputMask>\n                  <span>Edit number</span>\n                </Label>\n              </>\n            }\n          />\n        )}\n\n        <Button\n          type=\"button\"\n          className=\"btn\"\n          onClick={closeModal}\n          content={'Cancel'}\n        />\n      </Container>\n    </Overlay>\n  );\n}\n"],"names":["Button","type","content","className","onClick","disabled","Form","styled","Label","Input","FilterForm","FormElement","initValues","btnContent","onSubmit","e","formHandler","successHandler","preventDefault","children","Modal","dispatch","useDispatch","navigate","useNavigate","contactId","useParams","data","useGetContactByIdQuery","closeModal","filterContacts","useEditContactMutation","editContact","editContactHandler","contact","console","log","name","target","value","number","pattern","title","required","defaultValue","autoComplete","mask"],"sourceRoot":""}